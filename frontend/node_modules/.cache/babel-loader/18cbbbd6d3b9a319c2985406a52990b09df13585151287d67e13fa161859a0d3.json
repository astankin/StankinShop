{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Python\\\\Django-React_Ecommerce\\\\StankinShop\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen() {\n  _s();\n  const {\n    id: productId\n  } = useParams(); // useParams to get the product ID from the URL\n  const location = useLocation(); // useLocation to get the location object\n  const navigate = useNavigate(); // useNavigate to replace the history object\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"info\",\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CartScreen, \"ioovSVsxsyd7huzQ8AMwfcGDI4k=\", false, function () {\n  return [useParams, useLocation, useNavigate, useSelector, useDispatch];\n});\n_c = CartScreen;\nvar _c;\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"names":["React","useEffect","Link","useParams","useLocation","useNavigate","useDispatch","useSelector","Row","Col","ListGroup","Image","Button","Card","Message","addToCart","jsxDEV","_jsxDEV","CartScreen","_s","id","productId","location","navigate","qty","search","Number","split","cart","state","cartItems","dispatch","children","md","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","to","map","item","Item","product","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/frontend/src/screens/CartScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nexport default function CartScreen() {\r\n  const { id: productId } = useParams(); // useParams to get the product ID from the URL\r\n  const location = useLocation(); // useLocation to get the location object\r\n  const navigate = useNavigate(); // useNavigate to replace the history object\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n  const cart = useSelector(state => state.cart)\r\n  const{ cartItems } = cart\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant='info'>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n            <ListGroup variant='flush'>\r\n                {cartItems.map(item => (\r\n                  <ListGroup.Item key = {item.product}>\r\n                      <Row>\r\n                         <Col md={2}>\r\n                         </Col>\r\n                      </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        )}\r\n      <Col>\r\n\r\n      </Col>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}