{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { thunk } from 'redux-thunk';\nimport { productListReducer } from './reducers/productReducers';\n\n// import {\n//     productListReducer,\n//     productDetailsReducer,\n//     productDeleteReducer,\n//     productCreateReducer,\n//     productUpdateReducer,\n//     productReviewCreateReducer,\n//     productTopRatedReducer,\n// } from './reducers/productReducers';\n\n// import { cartReducer } from './reducers/cartReducers';\n\n// import {\n//     userLoginReducer,\n//     userRegisterReducer,\n//     userDetailsReducer,\n//     userUpdateProfileReducer,\n//     userListReducer,\n//     userDeleteReducer,\n//     userUpdateReducer,\n// } from './reducers/userReducers';\n\n// import {\n//     orderCreateReducer,\n//     orderDetailsReducer,\n//     orderPayReducer,\n//     orderListMyReducer,\n//     orderListReducer,\n//     orderDeliverReducer,\n// } from './reducers/orderReducers';\n\n// Combine reducers\n// const reducer = {\n//     productList: productListReducer,\n//     productDetails: productDetailsReducer,\n//     productDelete: productDeleteReducer,\n//     productCreate: productCreateReducer,\n//     productUpdate: productUpdateReducer,\n//     productReviewCreate: productReviewCreateReducer,\n//     productTopRated: productTopRatedReducer,\n\n//     cart: cartReducer,\n//     userLogin: userLoginReducer,\n//     userRegister: userRegisterReducer,\n//     userDetails: userDetailsReducer,\n//     userUpdateProfile: userUpdateProfileReducer,\n//     userList: userListReducer,\n//     userDelete: userDeleteReducer,\n//     userUpdate: userUpdateReducer,\n\n//     orderCreate: orderCreateReducer,\n//     orderDetails: orderDetailsReducer,\n//     orderPay: orderPayReducer,\n//     orderListMy: orderListMyReducer,\n//     orderList: orderListReducer,\n//     orderDeliver: orderDeliverReducer,\n// };\n\n// Load initial state from localStorage\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\n// Initial state\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\n// Configure the store\n\nconst store = configureStore({\n  reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunk),\n  devTools: process.env.NODE_ENV !== 'production' // Enable DevTools only in development\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","thunk","productListReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cart","cartItems","shippingAddress","userLogin","userInfo","store","reducer","preloadedState","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/frontend/src/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { thunk } from 'redux-thunk';\r\nimport { productListReducer } from './reducers/productReducers'\r\n\r\n// import {\r\n//     productListReducer,\r\n//     productDetailsReducer,\r\n//     productDeleteReducer,\r\n//     productCreateReducer,\r\n//     productUpdateReducer,\r\n//     productReviewCreateReducer,\r\n//     productTopRatedReducer,\r\n// } from './reducers/productReducers';\r\n\r\n// import { cartReducer } from './reducers/cartReducers';\r\n\r\n// import {\r\n//     userLoginReducer,\r\n//     userRegisterReducer,\r\n//     userDetailsReducer,\r\n//     userUpdateProfileReducer,\r\n//     userListReducer,\r\n//     userDeleteReducer,\r\n//     userUpdateReducer,\r\n// } from './reducers/userReducers';\r\n\r\n// import {\r\n//     orderCreateReducer,\r\n//     orderDetailsReducer,\r\n//     orderPayReducer,\r\n//     orderListMyReducer,\r\n//     orderListReducer,\r\n//     orderDeliverReducer,\r\n// } from './reducers/orderReducers';\r\n\r\n// Combine reducers\r\n// const reducer = {\r\n//     productList: productListReducer,\r\n//     productDetails: productDetailsReducer,\r\n//     productDelete: productDeleteReducer,\r\n//     productCreate: productCreateReducer,\r\n//     productUpdate: productUpdateReducer,\r\n//     productReviewCreate: productReviewCreateReducer,\r\n//     productTopRated: productTopRatedReducer,\r\n\r\n//     cart: cartReducer,\r\n//     userLogin: userLoginReducer,\r\n//     userRegister: userRegisterReducer,\r\n//     userDetails: userDetailsReducer,\r\n//     userUpdateProfile: userUpdateProfileReducer,\r\n//     userList: userListReducer,\r\n//     userDelete: userDeleteReducer,\r\n//     userUpdate: userUpdateReducer,\r\n\r\n//     orderCreate: orderCreateReducer,\r\n//     orderDetails: orderDetailsReducer,\r\n//     orderPay: orderPayReducer,\r\n//     orderListMy: orderListMyReducer,\r\n//     orderList: orderListReducer,\r\n//     orderDeliver: orderDeliverReducer,\r\n// };\r\n\r\n// Load initial state from localStorage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {};\r\n\r\n// Initial state\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n// Configure the store\r\n\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n    preloadedState: initialState,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n    devTools: process.env.NODE_ENV !== 'production', // Enable DevTools only in development\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,kBAAkB,QAAQ,4BAA4B;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAER,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;AAEV,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACpEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;;AAER;AACA,MAAMK,YAAY,GAAG;EACjBC,IAAI,EAAE;IACFC,SAAS,EAAET,oBAAoB;IAC/BU,eAAe,EAAEJ;EACrB,CAAC;EACDK,SAAS,EAAE;IAAEC,QAAQ,EAAEP;EAAoB;AAC/C,CAAC;;AAED;;AAGA,MAAMQ,KAAK,GAAGjB,cAAc,CAAC;EACzBkB,OAAO;EACPC,cAAc,EAAER,YAAY;EAC5BS,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAC;EAC1EqB,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,CAAE;AACrD,CAAC,CAAC;AAEF,eAAeT,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}