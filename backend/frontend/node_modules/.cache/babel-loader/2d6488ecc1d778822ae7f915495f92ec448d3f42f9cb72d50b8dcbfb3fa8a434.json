{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{thunk}from'redux-thunk';import{productListReducer,productDetailsReducer,productDeleteReducer,productCreateReducer,productUpdateReducer,productReviewCreateReducer,productTopRatedReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer}from'./reducers/userReducers';import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,orderListReducer,orderDeliverReducer}from'./reducers/orderReducers';// Combine reducers\nconst reducer={productList:productListReducer,productDetails:productDetailsReducer,productDelete:productDeleteReducer,productCreate:productCreateReducer,productUpdate:productUpdateReducer,productReviewCreate:productReviewCreateReducer,productTopRated:productTopRatedReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userDetails:userDetailsReducer,userUpdateProfile:userUpdateProfileReducer,userList:userListReducer,userDelete:userDeleteReducer,userUpdate:userUpdateReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderListMy:orderListMyReducer,orderList:orderListReducer,orderDeliver:orderDeliverReducer};// Load initial state from localStorage\nconst cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];const userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;const shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};// Initial state\nconst initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};// Configure the store\nconst store=configureStore({reducer,preloadedState:initialState,middleware:getDefaultMiddleware=>getDefaultMiddleware().concat(thunk),devTools:process.env.NODE_ENV!=='production'// Enable DevTools only in development\n});export default store;","map":{"version":3,"names":["configureStore","thunk","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store","preloadedState","middleware","getDefaultMiddleware","concat","devTools","process","env","NODE_ENV"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/backend/frontend/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { thunk } from 'redux-thunk';\r\n\r\n\r\n\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers';\r\n\r\n// Combine reducers\r\nconst reducer = {\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n};\r\n\r\n// Load initial state from localStorage\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {};\r\n\r\n// Initial state\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\n// Configure the store\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n    preloadedState: initialState,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\r\n    devTools: process.env.NODE_ENV !== 'production', // Enable DevTools only in development\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,KAAK,KAAQ,aAAa,CAInC,OACIC,kBAAkB,CAClBC,qBAAqB,CACrBC,oBAAoB,CACpBC,oBAAoB,CACpBC,oBAAoB,CACpBC,0BAA0B,CAC1BC,sBAAsB,KACnB,4BAA4B,CAEnC,OAASC,WAAW,KAAQ,yBAAyB,CAErD,OACIC,gBAAgB,CAChBC,mBAAmB,CACnBC,kBAAkB,CAClBC,wBAAwB,CACxBC,eAAe,CACfC,iBAAiB,CACjBC,iBAAiB,KACd,yBAAyB,CAEhC,OACIC,kBAAkB,CAClBC,mBAAmB,CACnBC,eAAe,CACfC,kBAAkB,CAClBC,gBAAgB,CAChBC,mBAAmB,KAChB,0BAA0B,CAEjC;AACA,KAAM,CAAAC,OAAO,CAAG,CACZC,WAAW,CAAEtB,kBAAkB,CAC/BuB,cAAc,CAAEtB,qBAAqB,CACrCuB,aAAa,CAAEtB,oBAAoB,CACnCuB,aAAa,CAAEtB,oBAAoB,CACnCuB,aAAa,CAAEtB,oBAAoB,CACnCuB,mBAAmB,CAAEtB,0BAA0B,CAC/CuB,eAAe,CAAEtB,sBAAsB,CAEvCuB,IAAI,CAAEtB,WAAW,CACjBuB,SAAS,CAAEtB,gBAAgB,CAC3BuB,YAAY,CAAEtB,mBAAmB,CACjCuB,WAAW,CAAEtB,kBAAkB,CAC/BuB,iBAAiB,CAAEtB,wBAAwB,CAC3CuB,QAAQ,CAAEtB,eAAe,CACzBuB,UAAU,CAAEtB,iBAAiB,CAC7BuB,UAAU,CAAEtB,iBAAiB,CAE7BuB,WAAW,CAAEtB,kBAAkB,CAC/BuB,YAAY,CAAEtB,mBAAmB,CACjCuB,QAAQ,CAAEtB,eAAe,CACzBuB,WAAW,CAAEtB,kBAAkB,CAC/BuB,SAAS,CAAEtB,gBAAgB,CAC3BuB,YAAY,CAAEtB,mBAClB,CAAC,CAED;AACA,KAAM,CAAAuB,oBAAoB,CAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAC7C,EAAE,CAER,KAAM,CAAAG,mBAAmB,CAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACtDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC5C,IAAI,CAEV,KAAM,CAAAI,0BAA0B,CAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CACpEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CACnD,CAAC,CAAC,CAER;AACA,KAAM,CAAAK,YAAY,CAAG,CACjBrB,IAAI,CAAE,CACFsB,SAAS,CAAER,oBAAoB,CAC/BS,eAAe,CAAEH,0BACrB,CAAC,CACDnB,SAAS,CAAE,CAAEuB,QAAQ,CAAEL,mBAAoB,CAC/C,CAAC,CAED;AAEA,KAAM,CAAAM,KAAK,CAAGxD,cAAc,CAAC,CACzBuB,OAAO,CACPkC,cAAc,CAAEL,YAAY,CAC5BM,UAAU,CAAGC,oBAAoB,EAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAAC3D,KAAK,CAAC,CAC1E4D,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAc;AACrD,CAAC,CAAC,CAEF,cAAe,CAAAR,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}