{"ast":null,"code":"export const validateEmail=email=>{const errors={};// Basic format validation using regex\nconst emailRegex=/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;if(!emailRegex.test(email)){errors.email='Please enter a valid email address.';return errors;// Exit early if the format is incorrect\n}// Check for restricted special characters (e.g., consecutive dots, spaces)\nif(/\\s/.test(email)){errors.email='Email must not contain spaces.';return errors;}if(email.includes('..')){errors.email='Email must not contain consecutive dots.';return errors;}// Check if the email has a valid domain format (e.g., gmail.com)\nconst validDomainRegex=/^[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;const domain=email.split('@')[1];if(!validDomainRegex.test(domain)){errors.email='Please enter a valid domain (e.g., gmail.com).';return errors;}// Check for common disposable email providers\nconst disposableDomains=['mailinator.com','guerrillamail.com','10minutemail.com','tempmail.com','trashmail.com','yopmail.com','getnada.com'];if(disposableDomains.includes(domain)){errors.email='Disposable email addresses are not allowed.';return errors;}// Check for known email providers with common misspellings\nconst knownProviders=['gmail.com','yahoo.com','hotmail.com','outlook.com'];const misspelledProvider=knownProviders.find(provider=>{return provider.split('.')[0]===domain.split('.')[0]&&provider!==domain;});if(misspelledProvider){errors.email=\"Did you mean \\\"\".concat(misspelledProvider,\"\\\"?\");}return errors;};","map":{"version":3,"names":["validateEmail","email","errors","emailRegex","test","includes","validDomainRegex","domain","split","disposableDomains","knownProviders","misspelledProvider","find","provider","concat"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/backend/frontend/src/validators/emailValidator.js"],"sourcesContent":["export const validateEmail = (email) => {\r\n    const errors = {};\r\n\r\n    // Basic format validation using regex\r\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(email)) {\r\n        errors.email = 'Please enter a valid email address.';\r\n        return errors; // Exit early if the format is incorrect\r\n    }\r\n\r\n    // Check for restricted special characters (e.g., consecutive dots, spaces)\r\n    if (/\\s/.test(email)) {\r\n        errors.email = 'Email must not contain spaces.';\r\n        return errors;\r\n    }\r\n\r\n    if (email.includes('..')) {\r\n        errors.email = 'Email must not contain consecutive dots.';\r\n        return errors;\r\n    }\r\n\r\n    // Check if the email has a valid domain format (e.g., gmail.com)\r\n    const validDomainRegex = /^[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    const domain = email.split('@')[1];\r\n    if (!validDomainRegex.test(domain)) {\r\n        errors.email = 'Please enter a valid domain (e.g., gmail.com).';\r\n        return errors;\r\n    }\r\n\r\n    // Check for common disposable email providers\r\n    const disposableDomains = [\r\n        'mailinator.com', 'guerrillamail.com', '10minutemail.com',\r\n        'tempmail.com', 'trashmail.com', 'yopmail.com', 'getnada.com'\r\n    ];\r\n    if (disposableDomains.includes(domain)) {\r\n        errors.email = 'Disposable email addresses are not allowed.';\r\n        return errors;\r\n    }\r\n\r\n    // Check for known email providers with common misspellings\r\n    const knownProviders = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com'];\r\n    const misspelledProvider = knownProviders.find(provider => {\r\n        return provider.split('.')[0] === domain.split('.')[0] && provider !== domain;\r\n    });\r\n    if (misspelledProvider) {\r\n        errors.email = `Did you mean \"${misspelledProvider}\"?`;\r\n    }\r\n\r\n    return errors;\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,aAAa,CAAIC,KAAK,EAAK,CACpC,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAC,UAAU,CAAG,gDAAgD,CACnE,GAAI,CAACA,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC,CAAE,CACzBC,MAAM,CAACD,KAAK,CAAG,qCAAqC,CACpD,MAAO,CAAAC,MAAM,CAAE;AACnB,CAEA;AACA,GAAI,IAAI,CAACE,IAAI,CAACH,KAAK,CAAC,CAAE,CAClBC,MAAM,CAACD,KAAK,CAAG,gCAAgC,CAC/C,MAAO,CAAAC,MAAM,CACjB,CAEA,GAAID,KAAK,CAACI,QAAQ,CAAC,IAAI,CAAC,CAAE,CACtBH,MAAM,CAACD,KAAK,CAAG,0CAA0C,CACzD,MAAO,CAAAC,MAAM,CACjB,CAEA;AACA,KAAM,CAAAI,gBAAgB,CAAG,gCAAgC,CACzD,KAAM,CAAAC,MAAM,CAAGN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClC,GAAI,CAACF,gBAAgB,CAACF,IAAI,CAACG,MAAM,CAAC,CAAE,CAChCL,MAAM,CAACD,KAAK,CAAG,gDAAgD,CAC/D,MAAO,CAAAC,MAAM,CACjB,CAEA;AACA,KAAM,CAAAO,iBAAiB,CAAG,CACtB,gBAAgB,CAAE,mBAAmB,CAAE,kBAAkB,CACzD,cAAc,CAAE,eAAe,CAAE,aAAa,CAAE,aAAa,CAChE,CACD,GAAIA,iBAAiB,CAACJ,QAAQ,CAACE,MAAM,CAAC,CAAE,CACpCL,MAAM,CAACD,KAAK,CAAG,6CAA6C,CAC5D,MAAO,CAAAC,MAAM,CACjB,CAEA;AACA,KAAM,CAAAQ,cAAc,CAAG,CAAC,WAAW,CAAE,WAAW,CAAE,aAAa,CAAE,aAAa,CAAC,CAC/E,KAAM,CAAAC,kBAAkB,CAAGD,cAAc,CAACE,IAAI,CAACC,QAAQ,EAAI,CACvD,MAAO,CAAAA,QAAQ,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAKD,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAIK,QAAQ,GAAKN,MAAM,CACjF,CAAC,CAAC,CACF,GAAII,kBAAkB,CAAE,CACpBT,MAAM,CAACD,KAAK,mBAAAa,MAAA,CAAoBH,kBAAkB,OAAI,CAC1D,CAEA,MAAO,CAAAT,MAAM,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}