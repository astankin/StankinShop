{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useNavigate,useLocation}from'react-router-dom';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{register}from'../actions/userActions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function RegisterScreen(){const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState('');const dispatch=useDispatch();const location=useLocation();// Get the location object from React Router\nconst navigate=useNavigate();// Get the navigate function from React Router\nconst redirect=location.search?location.search.split('=')[1]:'/';const userRegister=useSelector(state=>state.userRegister);const{error,loading,userInfo}=userRegister;useEffect(()=>{if(userInfo){navigate(redirect);// Use navigate instead of history.push\n}},[navigate,userInfo,redirect]);const submitHandler=e=>{e.preventDefault();if(password!==confirmPassword){setMessage('Passwords do not match');}else{dispatch(register(name,email,password));}};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\"// placeholder='Enter name'\n,value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"mt-3\",children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"email\"// placeholder='Enter Email'\n,value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"mt-3\",children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"password\"// placeholder='Enter Password'\n,value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"passwordConfirm\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"mt-3\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"password\"// placeholder='Confirm Password'\n,value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"mt-3\",children:\"Register\"})]}),/*#__PURE__*/_jsx(Row,{className:\"py-3\",children:/*#__PURE__*/_jsxs(Col,{children:[\"Have an Account?\",' ',/*#__PURE__*/_jsx(Link,{to:redirect?\"/login?redirect=\".concat(redirect):'/login',children:\"Sign In\"})]})})]});}export default RegisterScreen;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","register","jsx","_jsx","jsxs","_jsxs","RegisterScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","location","navigate","redirect","search","split","userRegister","state","error","loading","userInfo","submitHandler","e","preventDefault","children","variant","onSubmit","Group","controlId","Label","Control","required","type","value","onChange","target","className","to","concat"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/backend/frontend/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nimport { register } from '../actions/userActions';\r\n\r\nfunction RegisterScreen() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation(); // Get the location object from React Router\r\n    const navigate = useNavigate(); // Get the navigate function from React Router\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { error, loading, userInfo } = userRegister;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect); // Use navigate instead of history.push\r\n        }\r\n    }, [navigate, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                \r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        // placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label className='mt-3'>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        // placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label className='mt-3'>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        // placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label className='mt-3'>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        // placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='mt-3'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}