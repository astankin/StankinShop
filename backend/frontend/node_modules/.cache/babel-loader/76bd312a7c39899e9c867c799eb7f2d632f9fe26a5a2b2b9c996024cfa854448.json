{"ast":null,"code":"export const validatePassword=(password,confirmPassword,name,email)=>{const errors={};// Minimum length validation (8 characters)\nif(password.length<8){errors.password='Password must be at least 8 characters long.';return errors;// Exit early to avoid other checks\n}// Check for any white spaces in the password\nif(/\\s/.test(password)){errors.password='Password must not contain any spaces.';return errors;// Exit early to avoid other checks\n}// Password similarity to user attributes (e.g., name, email)\nif(name&&password.toLowerCase().includes(name.toLowerCase())){errors.password='Password is too similar to your name.';}if(email&&password.toLowerCase().includes(email.split('@')[0].toLowerCase())){errors.password='Password is too similar to your email.';}// Enhanced password validation with regex for complexity\nconst passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*?])[A-Za-z\\d!@#$%^&*?]{8,}$/;if(!passwordRegex.test(password)){errors.password=\"Password must contain at least one uppercase letter, \\n        one lowercase letter, one number, and one special character (!@#$%^&*?)\";}// Confirm Password validation\nif(password!==confirmPassword){errors.confirmPassword='Passwords do not match.';}return errors;};","map":{"version":3,"names":["validatePassword","password","confirmPassword","name","email","errors","length","test","toLowerCase","includes","split","passwordRegex"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/backend/frontend/src/validators/passwordValidator.js"],"sourcesContent":["\r\n \r\n\r\nexport const validatePassword = (password, confirmPassword, name, email) => {\r\n    const errors = {};\r\n\r\n    // Minimum length validation (8 characters)\r\n    if (password.length < 8) {\r\n        errors.password = 'Password must be at least 8 characters long.';\r\n        return errors; // Exit early to avoid other checks\r\n    }\r\n\r\n    // Check for any white spaces in the password\r\n    if (/\\s/.test(password)) {\r\n        errors.password = 'Password must not contain any spaces.';\r\n        return errors; // Exit early to avoid other checks\r\n    }\r\n\r\n    // Password similarity to user attributes (e.g., name, email)\r\n    if (name && password.toLowerCase().includes(name.toLowerCase())) {\r\n        errors.password = 'Password is too similar to your name.';\r\n    }\r\n\r\n    if (email && password.toLowerCase().includes(email.split('@')[0].toLowerCase())) {\r\n        errors.password = 'Password is too similar to your email.';\r\n    }\r\n\r\n    // Enhanced password validation with regex for complexity\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*?])[A-Za-z\\d!@#$%^&*?]{8,}$/;\r\n    if (!passwordRegex.test(password)) {\r\n        errors.password = `Password must contain at least one uppercase letter, \r\n        one lowercase letter, one number, and one special character (!@#$%^&*?)`;\r\n    }\r\n\r\n    // Confirm Password validation\r\n    if (password !== confirmPassword) {\r\n        errors.confirmPassword = 'Passwords do not match.';\r\n    }\r\n\r\n    return errors;\r\n};\r\n"],"mappings":"AAGA,MAAO,MAAM,CAAAA,gBAAgB,CAAGA,CAACC,QAAQ,CAAEC,eAAe,CAAEC,IAAI,CAAEC,KAAK,GAAK,CACxE,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEjB;AACA,GAAIJ,QAAQ,CAACK,MAAM,CAAG,CAAC,CAAE,CACrBD,MAAM,CAACJ,QAAQ,CAAG,8CAA8C,CAChE,MAAO,CAAAI,MAAM,CAAE;AACnB,CAEA;AACA,GAAI,IAAI,CAACE,IAAI,CAACN,QAAQ,CAAC,CAAE,CACrBI,MAAM,CAACJ,QAAQ,CAAG,uCAAuC,CACzD,MAAO,CAAAI,MAAM,CAAE;AACnB,CAEA;AACA,GAAIF,IAAI,EAAIF,QAAQ,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,CAAE,CAC7DH,MAAM,CAACJ,QAAQ,CAAG,uCAAuC,CAC7D,CAEA,GAAIG,KAAK,EAAIH,QAAQ,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,CAAC,CAAE,CAC7EH,MAAM,CAACJ,QAAQ,CAAG,wCAAwC,CAC9D,CAEA;AACA,KAAM,CAAAU,aAAa,CAAG,0EAA0E,CAChG,GAAI,CAACA,aAAa,CAACJ,IAAI,CAACN,QAAQ,CAAC,CAAE,CAC/BI,MAAM,CAACJ,QAAQ,yIACyD,CAC5E,CAEA;AACA,GAAIA,QAAQ,GAAKC,eAAe,CAAE,CAC9BG,MAAM,CAACH,eAAe,CAAG,yBAAyB,CACtD,CAEA,MAAO,CAAAG,MAAM,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}