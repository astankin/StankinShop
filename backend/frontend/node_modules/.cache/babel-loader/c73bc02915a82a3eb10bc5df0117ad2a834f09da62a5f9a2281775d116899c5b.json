{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useParams,useNavigate}from'react-router-dom';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Loader from'../components/Loader';import Message from'../components/Message';import FormContainer from'../components/FormContainer';import{getUserDetails,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(){const{id:userId}=useParams();// useParams replaces match.params.id\nconst navigate=useNavigate();// useNavigate replaces history.push\nconst[name,setName]=useState('');const[email,setEmail]=useState('');const[isAdmin,setIsAdmin]=useState(false);const dispatch=useDispatch();const userDetails=useSelector(state=>state.userDetails);const{error,loading,user}=userDetails;const userUpdate=useSelector(state=>state.userUpdate);const{error:errorUpdate,loading:loadingUpdate,success:successUpdate}=userUpdate;useEffect(()=>{if(successUpdate){dispatch({type:USER_UPDATE_RESET});navigate('/admin/userlist');// Replaces history.push('/admin/userlist')\n}else{if(!user.name||user._id!==Number(userId)){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,user,userId,successUpdate,navigate]);const submitHandler=e=>{e.preventDefault();dispatch(updateUser({_id:user._id,name,email,isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"mt-3\",children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{className:\"mt-3\",type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:e=>setIsAdmin(e.target.checked)})}),/*#__PURE__*/_jsx(Button,{className:\"mt-3\",type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","jsx","_jsx","jsxs","_jsxs","UserEditScreen","id","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","_id","Number","submitHandler","e","preventDefault","children","to","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","className","Check","label","checked"],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/backend/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nfunction UserEditScreen() {\r\n    const { id: userId } = useParams(); // useParams replaces match.params.id\r\n    const navigate = useNavigate(); // useNavigate replaces history.push\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { error, loading, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            navigate('/admin/userlist'); // Replaces history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>Go Back</Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label className='mt-3'>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                className='mt-3'\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button className='mt-3' type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}