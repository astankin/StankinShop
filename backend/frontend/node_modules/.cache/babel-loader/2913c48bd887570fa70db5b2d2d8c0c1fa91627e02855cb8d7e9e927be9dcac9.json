{"ast":null,"code":"// import axios from 'axios'\n// import {\n//     ORDER_CREATE_REQUEST,\n//     ORDER_CREATE_SUCCESS,\n//     ORDER_CREATE_FAIL,\n\n//     ORDER_DETAILS_REQUEST,\n//     ORDER_DETAILS_SUCCESS,\n//     ORDER_DETAILS_FAIL,\n\n//     ORDER_PAY_REQUEST,\n//     ORDER_PAY_SUCCESS,\n//     ORDER_PAY_FAIL,\n//     // ORDER_PAY_RESET,\n\n//     ORDER_LIST_MY_REQUEST,\n//     ORDER_LIST_MY_SUCCESS,\n//     ORDER_LIST_MY_FAIL,\n//     // ORDER_LIST_MY_RESET,\n\n//     ORDER_LIST_REQUEST,\n//     ORDER_LIST_SUCCESS,\n//     ORDER_LIST_FAIL,\n\n//     ORDER_DELIVER_REQUEST,\n//     ORDER_DELIVER_SUCCESS,\n//     ORDER_DELIVER_FAIL,\n//     // ORDER_DELIVER_RESET,\n// } from '../constants/orderConstants'\n\n// import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n// export const createOrder = (order) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_CREATE_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.post(\n//             `/api/orders/add/`,\n//             order,\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_CREATE_SUCCESS,\n//             payload: data\n//         })\n\n//         dispatch({\n//             type: CART_CLEAR_ITEMS,\n//             payload: data\n//         })\n\n//         localStorage.removeItem('cartItems')\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_CREATE_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n// export const getOrderDetails = (id) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_DETAILS_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.get(\n//             `/api/orders/${id}/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_DETAILS_SUCCESS,\n//             payload: data\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_DETAILS_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n// export const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_PAY_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.put(\n//             `/api/orders/${id}/pay/`,\n//             paymentResult,\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_PAY_SUCCESS,\n//             payload: data\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_PAY_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n// export const deliverOrder = (order) => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_DELIVER_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.put(\n//             `/api/orders/${order._id}/deliver/`,\n//             {},\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_DELIVER_SUCCESS,\n//             payload: data\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_DELIVER_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n// export const listMyOrders = () => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_LIST_MY_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.get(\n//             `/api/orders/myorders/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_LIST_MY_SUCCESS,\n//             payload: data\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_LIST_MY_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }\n\n// export const listOrders = () => async (dispatch, getState) => {\n//     try {\n//         dispatch({\n//             type: ORDER_LIST_REQUEST\n//         })\n\n//         const {\n//             userLogin: { userInfo },\n//         } = getState()\n\n//         const config = {\n//             headers: {\n//                 'Content-type': 'application/json',\n//                 Authorization: `Bearer ${userInfo.token}`\n//             }\n//         }\n\n//         const { data } = await axios.get(\n//             `/api/orders/`,\n//             config\n//         )\n\n//         dispatch({\n//             type: ORDER_LIST_SUCCESS,\n//             payload: data\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDER_LIST_FAIL,\n//             payload: error.response && error.response.data.detail\n//                 ? error.response.data.detail\n//                 : error.message,\n//         })\n//     }\n// }","map":{"version":3,"names":[],"sources":["C:/Users/user/Documents/Python/Django-React_Ecommerce/StankinShop/frontend/src/actions/orderActions.js"],"sourcesContent":["// import axios from 'axios'\r\n// import {\r\n//     ORDER_CREATE_REQUEST,\r\n//     ORDER_CREATE_SUCCESS,\r\n//     ORDER_CREATE_FAIL,\r\n\r\n//     ORDER_DETAILS_REQUEST,\r\n//     ORDER_DETAILS_SUCCESS,\r\n//     ORDER_DETAILS_FAIL,\r\n\r\n//     ORDER_PAY_REQUEST,\r\n//     ORDER_PAY_SUCCESS,\r\n//     ORDER_PAY_FAIL,\r\n//     // ORDER_PAY_RESET,\r\n\r\n//     ORDER_LIST_MY_REQUEST,\r\n//     ORDER_LIST_MY_SUCCESS,\r\n//     ORDER_LIST_MY_FAIL,\r\n//     // ORDER_LIST_MY_RESET,\r\n\r\n//     ORDER_LIST_REQUEST,\r\n//     ORDER_LIST_SUCCESS,\r\n//     ORDER_LIST_FAIL,\r\n\r\n//     ORDER_DELIVER_REQUEST,\r\n//     ORDER_DELIVER_SUCCESS,\r\n//     ORDER_DELIVER_FAIL,\r\n//     // ORDER_DELIVER_RESET,\r\n// } from '../constants/orderConstants'\r\n\r\n// import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\n// export const createOrder = (order) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_CREATE_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.post(\r\n//             `/api/orders/add/`,\r\n//             order,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_CREATE_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//         dispatch({\r\n//             type: CART_CLEAR_ITEMS,\r\n//             payload: data\r\n//         })\r\n\r\n//         localStorage.removeItem('cartItems')\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_CREATE_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_DETAILS_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.get(\r\n//             `/api/orders/${id}/`,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_DETAILS_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_DETAILS_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_PAY_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.put(\r\n//             `/api/orders/${id}/pay/`,\r\n//             paymentResult,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_PAY_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_PAY_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.put(\r\n//             `/api/orders/${order._id}/deliver/`,\r\n//             {},\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// export const listMyOrders = () => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_LIST_MY_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.get(\r\n//             `/api/orders/myorders/`,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_LIST_MY_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_LIST_MY_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const listOrders = () => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_LIST_REQUEST\r\n//         })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n\r\n//         const { data } = await axios.get(\r\n//             `/api/orders/`,\r\n//             config\r\n//         )\r\n\r\n//         dispatch({\r\n//             type: ORDER_LIST_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_LIST_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}